{
    "$schema": "https://json-schema.org/draft/2020-12/schema",
    "title": "JSON Schema for Sana, a validation and sanitization library",
    "description": "validation and sanitization library, written in Rust",
    "type": "object",
    "additionalProperties": false,
    "$defs": {
        "properties": {
            "types": {
                "type": "string",
                "enum": [
                    "number",
                    "integer",
                    "float",
                    "long",
                    "NaN",
                    "hex",
                    "boolean",
                    "string",
                    "char",
                    "object",
                    "array",
                    "date",
                    "null",
                    "enum"
                ]
            },
            "conditionals": {
                "properties": {
                    "matches": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "array"
                            },
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            },
                            {
                                "type": "object"
                            }
                        ]
                    },
                    "matchesRegex": {
                        "type": "string"
                    },
                    "includes": {
                        "type": "string"
                    },
                    "conditionals": {
                        "anyOf": [
                            {
                                "$ref": "#/$defs/properties/conditionals/properties/matches"
                            },
                            {
                                "$ref": "#/$defs/properties/conditionals/properties/matchesRegex"
                            },
                            {
                                "type": "string",
                                "enum": [
                                    "isNumber",
                                    "isInteger",
                                    "isFloat",
                                    "isString",
                                    "isBoolean",
                                    "isTrue",
                                    "isFalse",
                                    "isNull",
                                    "isNaN",
                                    "isArray",
                                    "isObject",
                                    "isDate",
                                    "isHEX",
                                    "isChar",
                                    "isEnum",
                                    "isOdd"
                                ]
                            },
                            {
                                "pattern": "^(min|mean|max|std|sqrt|sum|len|items)\\s+(is|is\\s+not)\\s+(lower|greater)\\s+than\\s+\\d+(\\.|)\\d*$"
                            },
                            {
                                "pattern": "^(min|mean|max|std|sqrt|sum|len|items)\\s+(is|is\\s+not)\\s+(lower|greater)\\s+or\\s+equal\\s+to\\s+\\d+(\\.|)\\d*$"
                            },
                            {
                                "pattern": "^(min|mean|max|std|sqrt|len|items)\\s+(is|is\\s+not)\\s+equal\\s+to\\s+\\d+(\\.|)\\d*$"
                            },
                            {
                                "pattern": "^(min|mean|max|std|sqrt|sum|len|items)\\s*(==|<=|>=|>|<)\\s*\\d+(\\.|)\\d*$"
                            },
                            {
                                "pattern": "^array\\s+of\\s+(numbers|objects|strings|nulls|booleans|integers|floats|NaN|dates|chars|hex)$"
                            }
                        ]
                    },
                    "conditionalKeyword": {
                        "anyOf": [
                            {
                                "$ref": "#/$defs/properties/conditionals/properties/conditionalObject"
                            },
                            {
                                "$ref": "#/$defs/properties/conditionals/properties/conditionalArray"
                            }
                        ]
                    },
                    "conditionalObject": {
                        "type": "object",
                        "properties": {
                            "AND": {
                                "$ref": "#/$defs/properties/conditionals/properties/conditionalKeyword"
                            },
                            "OR": {
                                "$ref": "#/$defs/properties/conditionals/properties/conditionalKeyword"
                            },
                            "NOT": {
                                "$ref": "#/$defs/properties/conditionals/properties/conditionalKeyword"
                            },
                            "matches": {
                                "$ref": "#/$defs/properties/conditionals/properties/matches"
                            },
                            "matchesRegex": {
                                "$ref": "#/$defs/properties/conditionals/properties/matchesRegex"
                            }
                        }
                    },
                    "conditionalArray": {
                        "type": "array",
                        "items": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "$ref": "#/$defs/properties/conditionals/properties/conditionalObject"
                                },
                                {
                                    "$ref": "#/$defs/properties/conditionals/properties/matches"
                                },
                                {
                                    "$ref": "#/$defs/properties/conditionals/properties/matchesRegex"
                                },
                                {
                                    "$ref": "#/$defs/properties/conditionals/properties/conditionals"
                                }
                            ]
                        }
                    }
                },
                "variableObject": {
                    "anyOf": [
                        {
                            "type": "object"
                        },
                        {
                            "type": "array"
                        }
                    ]
                }
            }
        }
    },
    "patternProperties": {
        "^.*$": {
            "description": "This is the name of a property",
            "type": "object",
            "required": [
                "type"
            ],
            "properties": {
                "type": {
                    "description": "This field defines the type of the data to be estored and/or transformed to",
                    "anyOf": [
                        {
                            "$ref": "#/$defs/properties/types"
                        },
                        {
                            "type": "string",
                            "pattern": "^(number|integer|float|long|NaN|hex|boolean|string|char|date|null)\\s*->\\s*(number|integer|float|long|hex|boolean|string|char|date|null|array)$"
                        },
                        {
                            "type": "string",
                            "pattern": "^(array|object|null|enum)\\s*->\\s*(array|object|null|enum|string|boolean|integer)$"
                        }
                    ]
                },
                "description": {
                    "description": "Short description about the described data",
                    "type": "string"
                },
                "validation": {
                    "description": "Conditionals that data must met in order to be valid",
                    "anyOf": [
                        {
                            "$ref": "#/$defs/properties/conditionals/properties/conditionalArray"
                        },
                        {
                            "$ref": "#/$defs/properties/conditionals/properties/conditionalObject"
                        },
                        {
                            "type": "object",
                            "properties": {
                                "beforeTransform": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/$defs/properties/conditionals/properties/conditionalArray"
                                        },
                                        {
                                            "$ref": "#/$defs/properties/conditionals/properties/conditionalObject"
                                        }
                                    ]
                                },
                                "afterTransform": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/$defs/properties/conditionals/properties/conditionalArray"
                                        },
                                        {
                                            "$ref": "#/$defs/properties/conditionals/properties/conditionalObject"
                                        }
                                    ]
                                }
                            }
                        }
                    ]
                }
            }
        }
    }
}